|DE1_SOC_golden_top
ADC_CONVST << controle_adc:myadc.adc_convst
ADC_DIN << controle_adc:myadc.adc_sdi
ADC_DOUT => ADC_DOUT.IN1
ADC_SCLK << controle_adc:myadc.adc_sck
AUD_ADCDAT => ~NO_FANOUT~
AUD_ADCLRCK <> <UNC>
AUD_BCLK <> <UNC>
AUD_DACDAT << <GND>
AUD_DACLRCK <> <UNC>
AUD_XCK << <GND>
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN1
DRAM_ADDR[0] << <GND>
DRAM_ADDR[1] << <GND>
DRAM_ADDR[2] << <GND>
DRAM_ADDR[3] << <GND>
DRAM_ADDR[4] << <GND>
DRAM_ADDR[5] << <GND>
DRAM_ADDR[6] << <GND>
DRAM_ADDR[7] << <GND>
DRAM_ADDR[8] << <GND>
DRAM_ADDR[9] << <GND>
DRAM_ADDR[10] << <GND>
DRAM_ADDR[11] << <GND>
DRAM_ADDR[12] << <GND>
DRAM_BA[0] << <GND>
DRAM_BA[1] << <GND>
DRAM_CAS_N << <GND>
DRAM_CKE << <GND>
DRAM_CLK << <GND>
DRAM_CS_N << <GND>
DRAM_DQ[0] <> <UNC>
DRAM_DQ[1] <> <UNC>
DRAM_DQ[2] <> <UNC>
DRAM_DQ[3] <> <UNC>
DRAM_DQ[4] <> <UNC>
DRAM_DQ[5] <> <UNC>
DRAM_DQ[6] <> <UNC>
DRAM_DQ[7] <> <UNC>
DRAM_DQ[8] <> <UNC>
DRAM_DQ[9] <> <UNC>
DRAM_DQ[10] <> <UNC>
DRAM_DQ[11] <> <UNC>
DRAM_DQ[12] <> <UNC>
DRAM_DQ[13] <> <UNC>
DRAM_DQ[14] <> <UNC>
DRAM_DQ[15] <> <UNC>
DRAM_LDQM << <GND>
DRAM_RAS_N << <GND>
DRAM_UDQM << <GND>
DRAM_WE_N << <GND>
FAN_CTRL << <GND>
FPGA_I2C_SCLK << <GND>
FPGA_I2C_SDAT <> <UNC>
GPIO_0[0] <> <UNC>
GPIO_0[1] <> <UNC>
GPIO_0[2] <> <UNC>
GPIO_0[3] <> <UNC>
GPIO_0[4] <> <UNC>
GPIO_0[5] <> <UNC>
GPIO_0[6] <> <UNC>
GPIO_0[7] <> <UNC>
GPIO_0[8] <> <UNC>
GPIO_0[9] <> <UNC>
GPIO_0[10] <> <UNC>
GPIO_0[11] <> <UNC>
GPIO_0[12] <> <UNC>
GPIO_0[13] <> <UNC>
GPIO_0[14] <> <UNC>
GPIO_0[15] <> <UNC>
GPIO_0[16] <> <UNC>
GPIO_0[17] <> <UNC>
GPIO_0[18] <> <UNC>
GPIO_0[19] <> <UNC>
GPIO_0[20] <> <UNC>
GPIO_0[21] <> <UNC>
GPIO_0[22] <> <UNC>
GPIO_0[23] <> <UNC>
GPIO_0[24] <> <UNC>
GPIO_0[25] <> <UNC>
GPIO_0[26] <> <UNC>
GPIO_0[27] <> <UNC>
GPIO_0[28] <> <UNC>
GPIO_0[29] <> <UNC>
GPIO_0[30] <> <UNC>
GPIO_0[31] <> <UNC>
GPIO_0[32] <> <UNC>
GPIO_0[33] <> <UNC>
GPIO_0[34] <> <UNC>
GPIO_0[35] <> <UNC>
GPIO_1[0] <> <UNC>
GPIO_1[1] <> <UNC>
GPIO_1[2] <> <UNC>
GPIO_1[3] <> <UNC>
GPIO_1[4] <> <UNC>
GPIO_1[5] <> <UNC>
GPIO_1[6] <> <UNC>
GPIO_1[7] <> <UNC>
GPIO_1[8] <> <UNC>
GPIO_1[9] <> <UNC>
GPIO_1[10] <> <UNC>
GPIO_1[11] <> <UNC>
GPIO_1[12] <> <UNC>
GPIO_1[13] <> <UNC>
GPIO_1[14] <> <UNC>
GPIO_1[15] <> <UNC>
GPIO_1[16] <> <UNC>
GPIO_1[17] <> <UNC>
GPIO_1[18] <> <UNC>
GPIO_1[19] <> <UNC>
GPIO_1[20] <> <UNC>
GPIO_1[21] <> <UNC>
GPIO_1[22] <> <UNC>
GPIO_1[23] <> <UNC>
GPIO_1[24] <> <UNC>
GPIO_1[25] <> <UNC>
GPIO_1[26] <> <UNC>
GPIO_1[27] <> <UNC>
GPIO_1[28] <> <UNC>
GPIO_1[29] <> <UNC>
GPIO_1[30] <> <UNC>
GPIO_1[31] <> <UNC>
GPIO_1[32] <> <UNC>
GPIO_1[33] <> <UNC>
GPIO_1[34] <> <UNC>
GPIO_1[35] <> <UNC>
HEX0[0] << convHexa7Seg:hex0.SeteSegmentos
HEX0[1] << convHexa7Seg:hex0.SeteSegmentos
HEX0[2] << convHexa7Seg:hex0.SeteSegmentos
HEX0[3] << convHexa7Seg:hex0.SeteSegmentos
HEX0[4] << convHexa7Seg:hex0.SeteSegmentos
HEX0[5] << convHexa7Seg:hex0.SeteSegmentos
HEX0[6] << convHexa7Seg:hex0.SeteSegmentos
HEX1[0] << convHexa7Seg:hex1.SeteSegmentos
HEX1[1] << convHexa7Seg:hex1.SeteSegmentos
HEX1[2] << convHexa7Seg:hex1.SeteSegmentos
HEX1[3] << convHexa7Seg:hex1.SeteSegmentos
HEX1[4] << convHexa7Seg:hex1.SeteSegmentos
HEX1[5] << convHexa7Seg:hex1.SeteSegmentos
HEX1[6] << convHexa7Seg:hex1.SeteSegmentos
HEX2[0] << convHexa7Seg:hex2.SeteSegmentos
HEX2[1] << convHexa7Seg:hex2.SeteSegmentos
HEX2[2] << convHexa7Seg:hex2.SeteSegmentos
HEX2[3] << convHexa7Seg:hex2.SeteSegmentos
HEX2[4] << convHexa7Seg:hex2.SeteSegmentos
HEX2[5] << convHexa7Seg:hex2.SeteSegmentos
HEX2[6] << convHexa7Seg:hex2.SeteSegmentos
HEX3[0] << <GND>
HEX3[1] << <GND>
HEX3[2] << <GND>
HEX3[3] << <GND>
HEX3[4] << <GND>
HEX3[5] << <GND>
HEX3[6] << <GND>
HEX4[0] << <GND>
HEX4[1] << <GND>
HEX4[2] << <GND>
HEX4[3] << <GND>
HEX4[4] << <GND>
HEX4[5] << <GND>
HEX4[6] << <GND>
HEX5[0] << <GND>
HEX5[1] << <GND>
HEX5[2] << <GND>
HEX5[3] << <GND>
HEX5[4] << <GND>
HEX5[5] << <GND>
HEX5[6] << <GND>
IRDA_RXD => ~NO_FANOUT~
IRDA_TXD << <GND>
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
PS2_CLK <> <UNC>
PS2_CLK2 <> <UNC>
PS2_DAT <> <UNC>
PS2_DAT2 <> <UNC>
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
TD_CLK27 => ~NO_FANOUT~
TD_DATA[0] => ~NO_FANOUT~
TD_DATA[1] => ~NO_FANOUT~
TD_DATA[2] => ~NO_FANOUT~
TD_DATA[3] => ~NO_FANOUT~
TD_DATA[4] => ~NO_FANOUT~
TD_DATA[5] => ~NO_FANOUT~
TD_DATA[6] => ~NO_FANOUT~
TD_DATA[7] => ~NO_FANOUT~
TD_HS => ~NO_FANOUT~
TD_RESET_N << <GND>
TD_VS => ~NO_FANOUT~
VGA_B[0] << <GND>
VGA_B[1] << <GND>
VGA_B[2] << <GND>
VGA_B[3] << <GND>
VGA_B[4] << <GND>
VGA_B[5] << <GND>
VGA_B[6] << <GND>
VGA_B[7] << <GND>
VGA_BLANK_N << <GND>
VGA_CLK << <GND>
VGA_G[0] << <GND>
VGA_G[1] << <GND>
VGA_G[2] << <GND>
VGA_G[3] << <GND>
VGA_G[4] << <GND>
VGA_G[5] << <GND>
VGA_G[6] << <GND>
VGA_G[7] << <GND>
VGA_HS << <GND>
VGA_R[0] << <GND>
VGA_R[1] << <GND>
VGA_R[2] << <GND>
VGA_R[3] << <GND>
VGA_R[4] << <GND>
VGA_R[5] << <GND>
VGA_R[6] << <GND>
VGA_R[7] << <GND>
VGA_SYNC_N << <GND>
VGA_VS << <GND>


|DE1_SOC_golden_top|clk_1k:myclk
clk_in_50M => contador[0].CLK
clk_in_50M => contador[1].CLK
clk_in_50M => contador[2].CLK
clk_in_50M => contador[3].CLK
clk_in_50M => contador[4].CLK
clk_in_50M => contador[5].CLK
clk_in_50M => contador[6].CLK
clk_in_50M => contador[7].CLK
clk_in_50M => contador[8].CLK
clk_in_50M => contador[9].CLK
clk_in_50M => contador[10].CLK
clk_in_50M => contador[11].CLK
clk_in_50M => contador[12].CLK
clk_in_50M => contador[13].CLK
clk_in_50M => contador[14].CLK
clk_in_50M => contador[15].CLK
clk_in_50M => clk_out_1K~reg0.CLK
reset => contador[0].ACLR
reset => contador[1].ACLR
reset => contador[2].ACLR
reset => contador[3].ACLR
reset => contador[4].ACLR
reset => contador[5].ACLR
reset => contador[6].ACLR
reset => contador[7].ACLR
reset => contador[8].ACLR
reset => contador[9].ACLR
reset => contador[10].ACLR
reset => contador[11].ACLR
reset => contador[12].ACLR
reset => contador[13].ACLR
reset => contador[14].ACLR
reset => contador[15].ACLR
reset => clk_out_1K~reg0.ACLR
clk_out_1K <= clk_out_1K~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|controle_adc:myadc
clk => out[0].CLK
clk => out[1].CLK
clk => out[2].CLK
clk => out[3].CLK
clk => out[4].CLK
clk => out[5].CLK
clk => out[6].CLK
clk => out[7].CLK
clk => out[8].CLK
clk => out[9].CLK
clk => out[10].CLK
clk => out[11].CLK
clk => sck.CLK
clk => contador[0].CLK
clk => contador[1].CLK
clk => contador[2].CLK
clk => contador[3].CLK
clk => contador[4].CLK
clk => contador[5].CLK
clk => convst.CLK
clk => estado~3.DATAIN
adc_sck <= sck.DB_MAX_OUTPUT_PORT_TYPE
adc_convst <= convst.DB_MAX_OUTPUT_PORT_TYPE
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdo => auxOut.DATAB
adc_sdi <= sdi.DB_MAX_OUTPUT_PORT_TYPE
dataout[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
dataout[8] <= out[8].DB_MAX_OUTPUT_PORT_TYPE
dataout[9] <= out[9].DB_MAX_OUTPUT_PORT_TYPE
dataout[10] <= out[10].DB_MAX_OUTPUT_PORT_TYPE
dataout[11] <= out[11].DB_MAX_OUTPUT_PORT_TYPE
conf[0] => Mux0.IN19
conf[1] => Mux0.IN18
conf[2] => Mux0.IN17
conf[3] => Mux0.IN16
conf[4] => Mux0.IN15
conf[5] => Mux0.IN14
reset => out[0].ACLR
reset => out[1].ACLR
reset => out[2].ACLR
reset => out[3].ACLR
reset => out[4].ACLR
reset => out[5].ACLR
reset => out[6].ACLR
reset => out[7].ACLR
reset => out[8].ACLR
reset => out[9].ACLR
reset => out[10].ACLR
reset => out[11].ACLR
reset => auxOut[0].ACLR
reset => auxOut[1].ACLR
reset => auxOut[2].ACLR
reset => auxOut[3].ACLR
reset => auxOut[4].ACLR
reset => auxOut[5].ACLR
reset => auxOut[6].ACLR
reset => auxOut[7].ACLR
reset => auxOut[8].ACLR
reset => auxOut[9].ACLR
reset => auxOut[10].ACLR
reset => auxOut[11].ACLR
reset => contSDI[3].IN1
reset => sdi.ACLR
reset => sck.ACLR
reset => estado.transmitindo.OUTPUTSELECT
reset => estado.convertendo.OUTPUTSELECT
reset => contador[0].ACLR
reset => contador[1].ACLR
reset => contador[2].ACLR
reset => contador[3].ACLR
reset => contador[4].ACLR
reset => contador[5].ACLR
reset => convst.ACLR


|DE1_SOC_golden_top|convHexa7Seg:hex0
hexa[0] => Decoder0.IN3
hexa[1] => Decoder0.IN2
hexa[2] => Decoder0.IN1
hexa[3] => Decoder0.IN0
SeteSegmentos[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|convHexa7Seg:hex1
hexa[0] => Decoder0.IN3
hexa[1] => Decoder0.IN2
hexa[2] => Decoder0.IN1
hexa[3] => Decoder0.IN0
SeteSegmentos[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|convHexa7Seg:hex2
hexa[0] => Decoder0.IN3
hexa[1] => Decoder0.IN2
hexa[2] => Decoder0.IN1
hexa[3] => Decoder0.IN0
SeteSegmentos[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
SeteSegmentos[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


